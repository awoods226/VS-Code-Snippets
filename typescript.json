{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Api Request": {
		"prefix": "api",
		"body": [
			"export const ${1: apiFunctionName} = () => {",
			"    return baseFetch(",
			"        getBaseUrl() + ${2: endpointUrl});",
			"};"
		],
		"description": "Basic Api request"
	},
	"Api Request w/params": {
		"prefix": "apip",
		"body": [
			"export const ${1: apiFunctionName} = (${2:param1}) => {",
			"    return baseFetch(",
			"        getBaseUrl() + `${3: endpointUrl}?${2:param1}=${${2:param1}}`);",
			"};"
		],
		"description": "Basic Api request with parameters"
	},
	"Basic Saga": {
		"prefix": "sga",
		"body": [
			"export function* ${1: saganame}() {",
			"    try {",
			"        const $2",
			"    } catch (error) {",
			"        console.log(error);",
			"        yield put({",
			"            type: ActionTypes.DISPLAY_ERROR,",
			"            payload: error",
			"        });",
			"    }",
			"}"
		],
		"description": "Basic Saga"
	}
}
